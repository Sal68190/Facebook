/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> neighbors;
    Node() {
        val = 0;
        neighbors = vector<Node*>();
    }
    Node(int _val) {
        val = _val;
        neighbors = vector<Node*>();
    }
    Node(int _val, vector<Node*> _neighbors) {
        val = _val;
        neighbors = _neighbors;
    }
};
*/

class Solution {
public:
    map<int, Node*> mp;
    Node* cloneGraph(Node* node) {
        if(!node) return node;
        if(mp[node->val]) return mp[node->val];
        mp[node->val] = new Node(node->val);
		
		vector<Node*> newNeighbors;
        for(int i=0;i< node->neighbors.size(); i++)
            newNeighbors.push_back(cloneGraph(node->neighbors[i]));
		
        mp[node->val]->neighbors = newNeighbors;
        return mp[node->val];
    }
};
